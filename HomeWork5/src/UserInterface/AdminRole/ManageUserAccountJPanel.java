/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.Business;
import Business.UserAccount;
import java.awt.CardLayout;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ragha
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel userContainer;
    private Business b;

    public ManageUserAccountJPanel(JPanel userContainer, Business b) {
        initComponents();
        this.userContainer = userContainer;
        this.b = b;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) userAccountTable.getModel();
        defaultTableModel.setRowCount(0);

        for (UserAccount s : b.getUserAccDir().getUserAccountDir()) {
            {

                Object[] row = new Object[3];
                row[0] = s;
                String hashedPassword = generateHash(s.getPassword());
                hashedPassword = hashedPassword.replaceAll("(?s).", "*");
                row[1] = hashedPassword;
                row[2] = s.getRole();
                defaultTableModel.addRow(row);

            }
        }
    }

    public static String generateHash(String input) {
        StringBuilder hash = new StringBuilder();

        try {
            MessageDigest sha = MessageDigest.getInstance("SHA-1");
            byte[] hashedBytes = sha.digest(input.getBytes());
            char[] digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
                'a', 'b', 'c', 'd', 'e', 'f'};
            
            for (int idx = 0; idx < hashedBytes.length; ++idx) {
                byte b = hashedBytes[idx];
                hash.append(digits[(b & 0xf0) >> 4]);
                hash.append(digits[b & 0x0f]);
            }
        } catch (NoSuchAlgorithmException e) {
            // handle error here.
        }

        return hash.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountTable = new javax.swing.JTable();
        findUserButton = new javax.swing.JButton();
        newUserButton = new javax.swing.JButton();
        updateUserButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Manage User Account Directory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        userAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Password", "Account Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccountTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 118, 661, 241));

        findUserButton.setText("Find User Account >>");
        findUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findUserButtonActionPerformed(evt);
            }
        });
        add(findUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 90, 210, -1));

        newUserButton.setText("New User Account >>");
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });
        add(newUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 390, 210, -1));

        updateUserButton.setText("Update User Account >>");
        updateUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserButtonActionPerformed(evt);
            }
        });
        add(updateUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 440, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed
        // TODO add your handling code here:
        CreateUserAccountJPanel createUserAccountJPanel = new CreateUserAccountJPanel(userContainer, b);
        userContainer.add("CreateUserAccountJPanel", createUserAccountJPanel);
        CardLayout cardLayout = (CardLayout) userContainer.getLayout();
        cardLayout.next(userContainer);
    }//GEN-LAST:event_newUserButtonActionPerformed

    private void updateUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserButtonActionPerformed
        // TODO add your handling code here:
        int selectedRows = userAccountTable.getSelectedRow();
        if (selectedRows < 0) {
            JOptionPane.showMessageDialog(null, "Select any row from the table to view the details", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            UserAccount userAcc = (UserAccount) userAccountTable.getValueAt(selectedRows, 0);
            UpdateUserAccountJPanel updateUserAccountJPanel = new UpdateUserAccountJPanel(userContainer, userAcc);
            userContainer.add("UpdateUserAccountJPanel", updateUserAccountJPanel);
            CardLayout cardLayout = (CardLayout) userContainer.getLayout();
            cardLayout.next(userContainer);

        }

    }//GEN-LAST:event_updateUserButtonActionPerformed

    private void findUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findUserButtonActionPerformed
        // TODO add your handling code here:
        SearchUserAccountJPanel searchUserAccountJPanel = new SearchUserAccountJPanel(userContainer, b);
        userContainer.add("SearchUserAccountJPanel", searchUserAccountJPanel);
        CardLayout cardLayout = (CardLayout) userContainer.getLayout();
        cardLayout.next(userContainer);
    }//GEN-LAST:event_findUserButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton findUserButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newUserButton;
    private javax.swing.JButton updateUserButton;
    private javax.swing.JTable userAccountTable;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacePackage;

import BusinessPackage.Airplane;
import BusinessPackage.Fleet;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ragha
 */
public class ViewAirplaneJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAirplaneJPanel
     */
    private Fleet fleet;
    ViewAirplaneJPanel viewAirplaneJPanel;

    public ViewAirplaneJPanel(Fleet fleet) {
        initComponents();
        //Button Group for Availability Status
        buttonGroupForAvailability.add(availableRadioButton);
        buttonGroupForAvailability.add(notAvailableRadioButton);
        //Button Group for Maintanance Certficate Expiry Status
        buttonGroupForCertificate.add(expiredRadioButton);
        buttonGroupForCertificate.add(validRadioButton);

        this.fleet = fleet;
        populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupForCertificate = new javax.swing.ButtonGroup();
        buttonGroupForAvailability = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        manufacturerTextField = new javax.swing.JTextField();
        seatsTextField = new javax.swing.JTextField();
        serialNumTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        airplaneTable1 = new javax.swing.JTable();
        viewAirplaneDetailsButton = new javax.swing.JButton();
        updateAirplaneButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        submitUpdateButton = new javax.swing.JButton();
        labelForTimestamp = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        airportTextField = new javax.swing.JTextField();
        avaiLabel = new javax.swing.JLabel();
        availableRadioButton = new javax.swing.JRadioButton();
        notAvailableRadioButton = new javax.swing.JRadioButton();
        expiredRadioButton = new javax.swing.JRadioButton();
        validRadioButton = new javax.swing.JRadioButton();
        dateForManufactur = new com.toedter.calendar.JDateChooser();
        jDateChooser = new com.toedter.calendar.JDateChooser();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Manufacturer");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, -1, -1));

        jLabel2.setText("No of seats");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, -1, -1));

        jLabel3.setText("Serial Number");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 610, -1, -1));

        jLabel4.setText("Model Number");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 660, -1, -1));

        jLabel5.setText("Manufacture Date");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 650, -1, -1));

        manufacturerTextField.setEnabled(false);
        add(manufacturerTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 500, 280, -1));

        seatsTextField.setEnabled(false);
        add(seatsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 550, 280, -1));

        serialNumTextField.setEnabled(false);
        add(serialNumTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 610, 280, -1));

        modelTextField.setEnabled(false);
        add(modelTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 660, 280, -1));

        airplaneTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Name", "Model Number", "Serial Number", "Manufacturer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(airplaneTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 0, 710, 350));

        viewAirplaneDetailsButton.setText("View");
        viewAirplaneDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAirplaneDetailsButtonActionPerformed(evt);
            }
        });
        add(viewAirplaneDetailsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 70, 83, -1));

        updateAirplaneButton.setText("Update");
        updateAirplaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAirplaneButtonActionPerformed(evt);
            }
        });
        add(updateAirplaneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 130, -1, -1));

        jLabel6.setText("Availability Status");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, -1, -1));

        jLabel7.setText("Maintenance Certificate");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, -1, -1));

        nameLabel.setText("Name");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        nameTextField.setEnabled(false);
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 280, -1));

        submitUpdateButton.setText("Submit after Update");
        submitUpdateButton.setEnabled(false);
        submitUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitUpdateButtonActionPerformed(evt);
            }
        });
        add(submitUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 820, -1, -1));
        add(labelForTimestamp, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, 360, 30));

        jLabel8.setText("Airport");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 600, -1, -1));

        airportTextField.setToolTipText("Give the value as either \"Expired\" or \"Valid\"");
        airportTextField.setEnabled(false);
        add(airportTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 590, 280, -1));

        avaiLabel.setText("Availablity Date");
        add(avaiLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 500, -1, -1));

        availableRadioButton.setText("Yes");
        availableRadioButton.setEnabled(false);
        availableRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableRadioButtonActionPerformed(evt);
            }
        });
        add(availableRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 440, -1, -1));

        notAvailableRadioButton.setText("No");
        notAvailableRadioButton.setEnabled(false);
        add(notAvailableRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 440, -1, -1));

        expiredRadioButton.setText("Expired");
        expiredRadioButton.setEnabled(false);
        add(expiredRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 540, -1, -1));

        validRadioButton.setText("Valid");
        validRadioButton.setEnabled(false);
        add(validRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 540, -1, -1));

        dateForManufactur.setEnabled(false);
        add(dateForManufactur, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 640, 280, -1));

        jDateChooser.setEnabled(false);
        add(jDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 490, 280, -1));
    }// </editor-fold>//GEN-END:initComponents
private void populateTable() {
        DefaultTableModel defaultModel = (DefaultTableModel) airplaneTable1.getModel();
        defaultModel.setRowCount(0);
        for (Airplane airplane : fleet.getFleet()) {
            Object row[] = new Object[4];
            row[0] = airplane;
            row[1] = airplane.getAirplaneModelNum();
            row[2] = airplane.getAirplaneSerialNum();
            row[3] = airplane.getAirplaneManufacturer();

            defaultModel.addRow(row);
        }
    }

    private void viewAirplaneDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAirplaneDetailsButtonActionPerformed
        labelForTimestamp.setVisible(false);
        int selectedRow = airplaneTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Airplane airplane = (Airplane) airplaneTable1.getValueAt((Integer) selectedRow, 0);
            nameTextField.setText(airplane.getAirplaneName());
            dateForManufactur.setDate(airplane.getAirplaneManufactureDate());
            manufacturerTextField.setText(airplane.getAirplaneManufacturer());
            seatsTextField.setText(Integer.toString(airplane.getAirplaneSeats()));
            serialNumTextField.setText(airplane.getAirplaneSerialNum());
            modelTextField.setText(airplane.getAirplaneModelNum());
            if (airplane.getIsAvailable()) {
                availableRadioButton.setSelected(true);
                            jDateChooser.setDate(airplane.getAvailabityDate());

            } else {
                notAvailableRadioButton.setSelected(true);
                            jDateChooser.setDate(null);

            }
            if (airplane.getIsExpired()) {
                expiredRadioButton.setSelected(true);
            } else {
                validRadioButton.setSelected(true);
            }
            airportTextField.setText(airplane.getAirportName());
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row");
        }
    }//GEN-LAST:event_viewAirplaneDetailsButtonActionPerformed

    private void updateAirplaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAirplaneButtonActionPerformed
        labelForTimestamp.setVisible(true);

        enableAlltheTextFields();


    }//GEN-LAST:event_updateAirplaneButtonActionPerformed

    private void submitUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitUpdateButtonActionPerformed
        labelForTimestamp.setVisible(true);

        int selectedRow = airplaneTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Airplane airplane = (Airplane) airplaneTable1.getValueAt(selectedRow, 0);
            //  DateFormat df = new SimpleDateFormat("MM/dd/yyyy");

            airplane.setAirplaneManufactureDate(dateForManufactur.getDate());
            airplane.setAvailabityDate(jDateChooser.getDate());

            airplane.setAirplaneName(nameTextField.getText());
            airplane.setAirplaneManufacturer(manufacturerTextField.getText());
            airplane.setAirplaneModelNum(modelTextField.getText());
            airplane.setAirplaneSeats(Integer.parseInt(seatsTextField.getText()));
            airplane.setAirplaneSerialNum(serialNumTextField.getText());
            if (availableRadioButton.isSelected()) {
                airplane.setIsAvailable(true);
            } else {
                airplane.setIsAvailable(false);
            }
            if (expiredRadioButton.isSelected()) {
                airplane.setIsExpired(true);
            } else {
                airplane.setIsExpired(false);
            }
            airplane.setAirportName(airportTextField.getText());
            fleet.setTimeStamp(new Timestamp(System.currentTimeMillis()));

            populateTable();

            nameTextField.setText("");
            manufacturerTextField.setText("");
            modelTextField.setText("");
            seatsTextField.setText("");
            serialNumTextField.setText("");
            dateForManufactur.setDate(null);
            airportTextField.setText("");
            jDateChooser.setDate(null);
            buttonGroupForAvailability.clearSelection();
            buttonGroupForCertificate.clearSelection();
            labelForTimestamp.setText("Catalog Last Updated on: " + fleet.getTimeStamp().toString());

        } else {
            JOptionPane.showMessageDialog(null, "Please select any row");
        }

        JOptionPane.showMessageDialog(null, "Airplane Entry Updated");
    }//GEN-LAST:event_submitUpdateButtonActionPerformed

    private void availableRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableRadioButtonActionPerformed

    private void enableAlltheTextFields() {
        nameTextField.setEnabled(true);

        manufacturerTextField.setEnabled(true);
        dateForManufactur.setEnabled(true);
        manufacturerTextField.setEnabled(true);
        seatsTextField.setEnabled(true);
        serialNumTextField.setEnabled(true);
        modelTextField.setEnabled(true);
        expiredRadioButton.setEnabled(true);
        validRadioButton.setEnabled(true);
        submitUpdateButton.setEnabled(true);
        airportTextField.setEnabled(true);
        jDateChooser.setEnabled(true);
        availableRadioButton.setEnabled(true);
        notAvailableRadioButton.setEnabled(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable airplaneTable1;
    private javax.swing.JTextField airportTextField;
    private javax.swing.JLabel avaiLabel;
    private javax.swing.JRadioButton availableRadioButton;
    private javax.swing.ButtonGroup buttonGroupForAvailability;
    private javax.swing.ButtonGroup buttonGroupForCertificate;
    private com.toedter.calendar.JDateChooser dateForManufactur;
    private javax.swing.JRadioButton expiredRadioButton;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelForTimestamp;
    private javax.swing.JTextField manufacturerTextField;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JRadioButton notAvailableRadioButton;
    private javax.swing.JTextField seatsTextField;
    private javax.swing.JTextField serialNumTextField;
    private javax.swing.JButton submitUpdateButton;
    private javax.swing.JButton updateAirplaneButton;
    private javax.swing.JRadioButton validRadioButton;
    private javax.swing.JButton viewAirplaneDetailsButton;
    // End of variables declaration//GEN-END:variables

}
